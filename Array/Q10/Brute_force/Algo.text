1. First, traverse the array and count the frequency of each element.
2. We will run two nested loops till N and store the count of each array element in maxCount. If for any
element, maxCount becomes greater than N/2, we will return that element as the majority element.
3. If no majority element is found, we will return -1 

Time Complexity: O(N^2), Where N denotes the size of the given array/list. We are running two nested loops till 
'N' to count the frequency of each element. So, the overall time complexity is O(N^2)

Space Complexity: O(1), constant space is used.

------ Majority element ----------------

1. Traverse the array: Use two nested loops to count the frequency of each element.

2. Frequency Count: 
    -> Outer loop iterates over each element of the array.
    -> Inner loop counts how many times the current element appears in the array.

3. Check Majority Condition:
    -> If the count of the current element exceeds N/2, return the element as the majority element.

4. No Majority Case:
    -> If no element satisfies the majority condition, return -1.